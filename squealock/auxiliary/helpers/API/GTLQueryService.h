/* This file was generated by the ServiceGenerator.
 * The ServiceGenerator is Copyright (c) 2016 Google Inc.
 */

//
//  GTLQueryService.h
//

// ----------------------------------------------------------------------------
// NOTE: This file is generated from Google APIs Discovery Service.
// Service:
//   service/v1
// Description:
//   This is an API
// Classes:
//   GTLQueryService (15 custom class methods, 21 custom properties)

#if GTL_BUILT_AS_FRAMEWORK
  #import "GTL/GTLQuery.h"
#else
  #import "GTLQuery.h"
#endif

@class GTLServiceKeyWrapper;
@class GTLServiceUserDetailsWrapper;

@interface GTLQueryService : GTLQuery

//
// Parameters valid on all methods.
//

// Selector specifying which fields to include in a partial response.
@property (nonatomic, copy) NSString *fields;

//
// Method-specific parameters; see the comments below for more information.
//
@property (nonatomic, copy) NSString *attachment;
@property (nonatomic, copy) NSString *deviceType;
@property (nonatomic, copy) NSString *email;
@property (nonatomic, copy) NSString *filterBy;
@property (nonatomic, copy) NSString *message;
@property (nonatomic, copy) NSString *newPassword NS_RETURNS_NOT_RETAINED;
@property (nonatomic, copy) NSString *newUsername NS_RETURNS_NOT_RETAINED;
@property (nonatomic, copy) NSString *oldPassword;
@property (nonatomic, copy) NSString *oldUsername;
@property (nonatomic, copy) NSString *otherUsername;
@property (nonatomic, assign) NSInteger page;
@property (nonatomic, assign) NSInteger pageSize;
@property (nonatomic, copy) NSString *password;
@property (nonatomic, copy) NSString *passwordHash;
@property (nonatomic, copy) NSString *query;
@property (nonatomic, copy) NSString *receiverUsername;
@property (nonatomic, copy) NSString *regId;
@property (nonatomic, assign) long long timestamp;
@property (nonatomic, copy) NSString *timezone;
@property (nonatomic, copy) NSString *username;

#pragma mark - Service level methods
// These create a GTLQueryService object.

// Method: service.changePassword
//  Authorization scope(s):
//   kGTLAuthScopeServiceUserinfoEmail
// Fetches a GTLServiceResponse.
+ (instancetype)queryForChangePasswordWithUsername:(NSString *)username
                                       oldPassword:(NSString *)oldPassword
                                         timestamp:(long long)timestamp
                                       newPassword:(NSString *)newPassword;

// Method: service.changeUsername
//  Authorization scope(s):
//   kGTLAuthScopeServiceUserinfoEmail
// Fetches a GTLServiceResponse.
+ (instancetype)queryForChangeUsernameWithOldUsername:(NSString *)oldUsername
                                         passwordHash:(NSString *)passwordHash
                                            timestamp:(long long)timestamp
                                          newUsername:(NSString *)newUsername;

// Method: service.fetchNewMessages
//  Authorization scope(s):
//   kGTLAuthScopeServiceUserinfoEmail
// Fetches a GTLServiceResponse.
+ (instancetype)queryForFetchNewMessagesWithUsername:(NSString *)username
                                        passwordHash:(NSString *)passwordHash
                                           timestamp:(long long)timestamp;

// Method: service.forgotPassword
//  Authorization scope(s):
//   kGTLAuthScopeServiceUserinfoEmail
// Fetches a GTLServiceResponse.
+ (instancetype)queryForForgotPasswordWithUsername:(NSString *)username
                                             email:(NSString *)email;

// Method: service.getAccountDetails
//  Authorization scope(s):
//   kGTLAuthScopeServiceUserinfoEmail
// Fetches a GTLServiceResponse.
+ (instancetype)queryForGetAccountDetailsWithPasswordHash:(NSString *)passwordHash
                                                timestamp:(long long)timestamp
                                                 username:(NSString *)username;

// Method: service.getCredentials
//  Authorization scope(s):
//   kGTLAuthScopeServiceUserinfoEmail
// Fetches a GTLServiceResponse.
+ (instancetype)queryForGetCredentialsWithUsername:(NSString *)username
                                      passwordHash:(NSString *)passwordHash
                                         timestamp:(long long)timestamp
                                     otherUsername:(NSString *)otherUsername;

// Method: service.getKeyPart
//  Authorization scope(s):
//   kGTLAuthScopeServiceUserinfoEmail
// Fetches a GTLServiceResponse.
+ (instancetype)queryForGetKeyPartWithPasswordHash:(NSString *)passwordHash
                                         timestamp:(long long)timestamp
                                          username:(NSString *)username;

// Method: service.getVersion
//  Authorization scope(s):
//   kGTLAuthScopeServiceUserinfoEmail
// Fetches a GTLServiceResponse.
+ (instancetype)queryForGetVersion;

// Method: service.purchaseSubscription
//  Authorization scope(s):
//   kGTLAuthScopeServiceUserinfoEmail
// Fetches a GTLServiceResponse.
+ (instancetype)queryForPurchaseSubscriptionWithUsername:(NSString *)username
                                            passwordHash:(NSString *)passwordHash
                                               timestamp:(long long)timestamp;

// Method: service.registerUser
//  Authorization scope(s):
//   kGTLAuthScopeServiceUserinfoEmail
// Fetches a GTLServiceResponse.
+ (instancetype)queryForRegisterUserWithObject:(GTLServiceKeyWrapper *)object
                                      username:(NSString *)username
                                      password:(NSString *)password
                                    deviceType:(NSString *)deviceType
                                         regId:(NSString *)regId
                                         email:(NSString *)email
                                      timezone:(NSString *)timezone;

// Method: service.screenshotMade
//  Authorization scope(s):
//   kGTLAuthScopeServiceUserinfoEmail
// Fetches a GTLServiceResponse.
+ (instancetype)queryForScreenshotMadeWithUsername:(NSString *)username
                                  receiverUsername:(NSString *)receiverUsername;

// Method: service.searchUsers
//  Authorization scope(s):
//   kGTLAuthScopeServiceUserinfoEmail
// Fetches a GTLServiceResponse.
+ (instancetype)queryForSearchUsersWithUsername:(NSString *)username
                                   passwordHash:(NSString *)passwordHash
                                      timestamp:(long long)timestamp
                                       filterBy:(NSString *)filterBy
                                          query:(NSString *)query
                                       pageSize:(NSInteger)pageSize
                                           page:(NSInteger)page;

// Method: service.sendMessage
//  Authorization scope(s):
//   kGTLAuthScopeServiceUserinfoEmail
// Fetches a GTLServiceResponse.
+ (instancetype)queryForSendMessageWithUsername:(NSString *)username
                                       password:(NSString *)password
                                      timestamp:(long long)timestamp
                                        message:(NSString *)message
                                     attachment:(NSString *)attachment
                               receiverUsername:(NSString *)receiverUsername;

// Method: service.updateAccountDetails
//  Authorization scope(s):
//   kGTLAuthScopeServiceUserinfoEmail
// Fetches a GTLServiceResponse.
+ (instancetype)queryForUpdateAccountDetailsWithObject:(GTLServiceUserDetailsWrapper *)object
                                              username:(NSString *)username
                                          passwordHash:(NSString *)passwordHash
                                             timestamp:(long long)timestamp;

// Method: service.updateUser
//  Authorization scope(s):
//   kGTLAuthScopeServiceUserinfoEmail
// Fetches a GTLServiceResponse.
+ (instancetype)queryForUpdateUserWithObject:(GTLServiceKeyWrapper *)object
                                    username:(NSString *)username
                                passwordHash:(NSString *)passwordHash
                                   timestamp:(long long)timestamp
                                  deviceType:(NSString *)deviceType
                                       regId:(NSString *)regId
                                    timezone:(NSString *)timezone;

@end
